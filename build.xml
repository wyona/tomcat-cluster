<?xml version="1.0"?>

<!--

    Overview of Ant Targets

    bootstrap           Meta target that build everything
    compile-apache      Compile Apache-HTTPD from sources
    compile-mod_jk      Compile mod_jk from sources
    install-balancer    Deploy the balancer application
    setup-balancer      Setup the balancer tomcat
    setup-tomcat-nodes  Setup the two tomcat cluster nodes

    Default target: bootstrap

-->

<project name="tomcat-cluster" basedir="." default="bootstrap">

  <property file="local.build.properties"/>
  <property file="build.properties"/>

  <target name="init">
    <splash imageurl="file://${src.dir}/cluster.jpg" showduration="0"/>
  </target>

  <target name="bootstrap" description="Meta target that builds everything" depends="init, compile-apache, compile-mod_jk, setup-tomcat-nodes, setup-balancer, install-balancer, pack-apache"/>

  <target name="bootstrap-tomcat" description="Meta target that builds Tomcat Cluster and Balancer" depends="init, setup-tomcat-nodes, setup-balancer, install-balancer"/>

  <target name="clean" depends="init" description="Clean build directory">
    <delete dir="${build.dir}"/>
  </target>

  <target name="dist-clean" depends="clean" description="Clean distr and build directory">
    <delete dir="${dist.dir}"/>
  </target>

  <target name="pack-apache" depends="compile-apache, compile-mod_jk">
    <mkdir dir="${dist.dir}"/>
    <tar compression="bzip2"
         destfile="${dist.dir}/${apache.version}-jk-${os.name}.tar.bz2">
      <tarfileset dir="${build.dir}/apache" prefix="apache">
        <include name="**"/>
      </tarfileset>
    </tar>
  </target>

  <target name="setup-balancer" depends="init" description="Setup the balancer tomcat">

    <!-- Unpack standard Tomcat -->
    <untar src="${lib.dir}/${tomcat.tarball}"
           overwrite="true"
           compression="gzip"
           dest="${build.dir}"/>
    <copy overwrite="true" todir="${build.dir}/${tomcat.version}-balancer">
      <fileset dir="${build.dir}/${tomcat.version}"/>
    </copy>
    <delete dir="${build.dir}/${tomcat.version}"/>

    <!-- Make shell scripts executable -->
    <chmod dir="${build.dir}/${tomcat.version}-balancer/bin" perm="u+x" includes="**.sh"/>

    <!-- Customize configuration file -->
<!--
    <copy file="src/jakarta-tomcat-5.0.30-balancer/conf/server.xml"
          todir="${build.dir}/${tomcat.version}-balancer/conf"
          overwrite="true"/>
-->
    <copy file="${conf.dir}/jakarta-tomcat-5.0.30-balancer/server.xml"
          todir="${build.dir}/${tomcat.version}-balancer/conf"
          overwrite="true"/>
    <replace file="${build.dir}/${tomcat.version}-balancer/conf/${tomcat.conf}" value="9095">
      <replacetoken>@SHUTDOWN@</replacetoken>
    </replace>
    <replace file="${build.dir}/${tomcat.version}-balancer/conf/${tomcat.conf}" value="${balancer.http.port}">
      <replacetoken>@HTTP@</replacetoken>
    </replace>
    <replace file="${build.dir}/${tomcat.version}-balancer/conf/${tomcat.conf}" value="9099">
      <replacetoken>@AJP@</replacetoken>
    </replace>

    <!-- ??? -->
    <copy overwrite="true" tofile="balancer/local.build.properties">
      <fileset file="${conf.dir}/balancer.build.properties"/>
    </copy>
    <replace file="balancer/local.build.properties" value="${build.dir}/${tomcat.version}-balancer">
      <replacetoken>@TOMCAT_HOME@</replacetoken>
    </replace>
  </target>

  <target name="install-balancer" depends="setup-balancer" description="Deploy the balancer application">
    <ant inheritAll="false" inheritRefs="false" dir="balancer"/>
  </target>

  <target name="setup-tomcat-nodes" depends="init" description="Setup the two tomcat cluster nodes">

    <!-- Unpack standard Tomcat -->
    <untar src="${lib.dir}/${tomcat.tarball}"
           overwrite="true"
           compression="gzip"
           dest="${build.dir}"/>

    <!-- Cluster Node 1 -->
    <copy overwrite="true" todir="${build.dir}/${tomcat.version}-cnode1">
      <fileset dir="${build.dir}/${tomcat.version}"/>
    </copy>
    <chmod dir="${build.dir}/${tomcat.version}-cnode1/bin" perm="u+x" includes="**.sh"/>
<!--
    <copy file="src/jakarta-tomcat-5.0.30-1/conf/server.xml"
          todir="${build.dir}/${tomcat.version}-cnode1/conf"
          overwrite="true"/>
-->
    <copy file="${conf.dir}/jakarta-tomcat-5.0.30-cluster-node/server.xml"
          todir="${build.dir}/${tomcat.version}-cnode1/conf"
          overwrite="true"/>
    <replace file="${build.dir}/${tomcat.version}-cnode1/conf/${tomcat.conf}" value="9015">
      <replacetoken>@SHUTDOWN@</replacetoken>
    </replace>
    <replace file="${build.dir}/${tomcat.version}-cnode1/conf/${tomcat.conf}" value="9018">
      <replacetoken>@HTTP@</replacetoken>
    </replace>
    <replace file="${build.dir}/${tomcat.version}-cnode1/conf/${tomcat.conf}" value="9019">
      <replacetoken>@AJP@</replacetoken>
    </replace>
    <replace file="${build.dir}/${tomcat.version}-cnode1/conf/${tomcat.conf}" value="9101">
      <replacetoken>@TCP_LISTEN_PORT@</replacetoken>
    </replace>
    <replace file="${build.dir}/${tomcat.version}-cnode1/conf/${tomcat.conf}" value="cnode1">
      <replacetoken>@CNODE@</replacetoken>
    </replace>

    <!-- Cluster Node 2 -->
    <copy overwrite="true" todir="${build.dir}/${tomcat.version}-cnode2">
      <fileset dir="${build.dir}/${tomcat.version}"/>
    </copy>
    <chmod dir="${build.dir}/${tomcat.version}-cnode2/bin" perm="u+x" includes="**.sh"/>
<!--
    <copy file="src/jakarta-tomcat-5.0.30-2/conf/server.xml"
          todir="${build.dir}/${tomcat.version}-cnode2/conf"
          overwrite="true"/>
-->
    <copy file="${conf.dir}/jakarta-tomcat-5.0.30-cluster-node/server.xml"
          todir="${build.dir}/${tomcat.version}-cnode2/conf"
          overwrite="true"/>
    <replace file="${build.dir}/${tomcat.version}-cnode2/conf/${tomcat.conf}" value="9025">
      <replacetoken>@SHUTDOWN@</replacetoken>
    </replace>
    <replace file="${build.dir}/${tomcat.version}-cnode2/conf/${tomcat.conf}" value="9028">
      <replacetoken>@HTTP@</replacetoken>
    </replace>
    <replace file="${build.dir}/${tomcat.version}-cnode2/conf/${tomcat.conf}" value="9029">
      <replacetoken>@AJP@</replacetoken>
    </replace>
    <replace file="${build.dir}/${tomcat.version}-cnode2/conf/${tomcat.conf}" value="9201">
      <replacetoken>@TCP_LISTEN_PORT@</replacetoken>
    </replace>
    <replace file="${build.dir}/${tomcat.version}-cnode2/conf/${tomcat.conf}" value="cnode2">
      <replacetoken>@CNODE@</replacetoken>
    </replace>

    <delete dir="${build.dir}/${tomcat.version}"/>
  </target>

  <target name="compile-apache" depends="init" description="Compile Apache-HTTPD from sources">
    <echo message="compiling ${apache.version}"/>
    <echo message="static modules: ${apache.static_modules}"/>
    <untar src="${src.dir}/${apache.tarball}"
           overwrite="false"
           compression="gzip"
           dest="${build.dir}"/>
    <chmod dir="${build.dir}/${apache.version}" perm="u+x" includes="**/*.sh"/>
    <exec dir="${build.dir}/${apache.version}"
          executable="sh"
          failonerror="true">
      <arg value="configure"/>
      <arg value="--prefix=${build.dir}/apache"/>
      <arg value="--enable-modules=${apache.static_modules}"/>
    </exec>
    <exec dir="${build.dir}/${apache.version}"
          executable="make"
          failonerror="true"/>
    <exec dir="${build.dir}/${apache.version}"
          executable="make"
          failonerror="true">
      <arg value="install"/>
    </exec>
    <copy overwrite="true" file="${conf.dir}/${apache.conf}" todir="${build.dir}/apache/conf"/>
    <replace file="${build.dir}/apache/conf/${apache.conf}" value="${apache.port}">
      <replacetoken>@PORT@</replacetoken>
    </replace>
    <replace file="${build.dir}/apache/conf/${apache.conf}" value="${build.dir}/apache">
      <replacetoken>@ROOT@</replacetoken>
    </replace>
    <copy overwrite="true" file="${conf.dir}/${apache.vhost_conf}" todir="${build.dir}/apache/conf/extra"/>
    <replace file="${build.dir}/apache/conf/extra/${apache.vhost_conf}" value="${apache.port}">
      <replacetoken>@PORT@</replacetoken>
    </replace>
  </target>

  <target name="compile-mod_jk" depends="compile-apache" description="Compile mod_jk from sources">
    <replace file="${build.dir}/apache/bin/apxs">
      <replacetoken>/replace/with/path/to/perl/interpreter</replacetoken>
      <replacevalue>/usr/bin/perl</replacevalue>
    </replace>
    <chmod dir="${build.dir}/apache" perm="u+x" includes="bin/**"/>
    <echo message="compiling ${connectors.version}"/>
    <untar src="${src.dir}/${connectors.tarball}"
           overwrite="false"
           compression="gzip"
           dest="${build.dir}"/>
    <exec dir="${build.dir}/${connectors.version}/jk/native"
          executable="sh"
          failonerror="true">
      <arg value="configure"/>
      <arg value="--with-apxs=${build.dir}/apache/bin/apxs"/>
    </exec>
    <exec dir="${build.dir}/${connectors.version}/jk/native"
          executable="make"
          failonerror="true"/>
    <exec dir="${build.dir}/${connectors.version}/jk/native"
          executable="make"
          failonerror="true">
      <arg value="install"/>
    </exec>
    <copy file="${conf.dir}/${connectors.conf}" todir="${build.dir}/apache/conf"/>
  </target>

</project>
